{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { fetchdData, fetchDetail } from \"../redux/fetchData\";\nimport patchSwitch from \"../redux/patchData\";\nimport { Grid, Typography, Table, TableContainer, TableHead, TableBody, TableCell, Switch, TableRow, Button } from \"@material-ui/core/\";\n\nfunction Home() {\n  //route\n  let history = useHistory();\n  let location = useLocation(); //redux\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchdData());\n  }, []); // state init\n  //   const [active, setactive] = useState({ statusSwitch: false });\n  //reducer fetching data\n\n  const state = useSelector(state => state);\n  const data = state.dataReducer;\n\n  const handleChange = (id, status) => props => {\n    dispatch(patchSwitch(id, status));\n  };\n\n  const handleDelete = () => {\n    return null;\n  };\n\n  const handleClickName = id => event => {\n    history.push({\n      pathname: `/edit/${id}`,\n      state: {\n        background: location\n      }\n    });\n    dispatch(fetchDetail(id));\n    console.log(\"this is working\", id);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"test\");\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/Home.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","useLocation","fetchdData","fetchDetail","patchSwitch","Grid","Typography","Table","TableContainer","TableHead","TableBody","TableCell","Switch","TableRow","Button","Home","history","location","dispatch","state","data","dataReducer","handleChange","id","status","props","handleDelete","handleClickName","event","push","pathname","background","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,oBAAxC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,MARF,EASEC,QATF,EAUEC,MAVF,QAWO,oBAXP;;AAaA,SAASC,IAAT,GAAgB;AACd;AACA,MAAIC,OAAO,GAAGhB,UAAU,EAAxB;AACA,MAAIiB,QAAQ,GAAGhB,WAAW,EAA1B,CAHc,CAKd;;AACA,MAAIiB,QAAQ,GAAGnB,WAAW,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAAChB,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CARc,CAYd;AACA;AAEA;;AACA,QAAMiB,KAAK,GAAGrB,WAAW,CAAEqB,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAMC,IAAI,GAAGD,KAAK,CAACE,WAAnB;;AAEA,QAAMC,YAAY,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAiBC,KAAD,IAAW;AAC9CP,IAAAA,QAAQ,CAACd,WAAW,CAACmB,EAAD,EAAKC,MAAL,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzB,WAAO,IAAP;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIJ,EAAD,IAASK,KAAD,IAAW;AACzCZ,IAAAA,OAAO,CAACa,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAG,SAAQP,EAAG,EADX;AAEXJ,MAAAA,KAAK,EAAE;AACLY,QAAAA,UAAU,EAAEd;AADP;AAFI,KAAb;AAMAC,IAAAA,QAAQ,CAACf,WAAW,CAACoB,EAAD,CAAZ,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,EAA/B;AACD,GATD;;AAUA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAC,QAArC;AAA8C,IAAA,UAAU,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+DD;;AAED,eAAeR,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { fetchdData, fetchDetail } from \"../redux/fetchData\";\r\nimport patchSwitch from \"../redux/patchData\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Switch,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core/\";\r\n\r\nfunction Home() {\r\n  //route\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  //redux\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchdData());\r\n  }, []);\r\n\r\n  // state init\r\n  //   const [active, setactive] = useState({ statusSwitch: false });\r\n\r\n  //reducer fetching data\r\n  const state = useSelector((state) => state);\r\n  const data = state.dataReducer;\r\n\r\n  const handleChange = (id, status) => (props) => {\r\n    dispatch(patchSwitch(id, status));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    return null;\r\n  };\r\n\r\n  const handleClickName = (id) => (event) => {\r\n    history.push({\r\n      pathname: `/edit/${id}`,\r\n      state: {\r\n        background: location,\r\n      },\r\n    });\r\n    dispatch(fetchDetail(id));\r\n    console.log(\"this is working\", id);\r\n  };\r\n  return (\r\n    <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n      test\r\n      {/* <Grid item xs={10}>\r\n        <TableContainer>\r\n          <Table aria-label=\"simple-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>id</TableCell>\r\n                <TableCell>name</TableCell>\r\n                <TableCell>active</TableCell>\r\n                <TableCell>delete</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.pending === true ? (\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <Typography component=\"span\" variant=\"h3\">\r\n                      Loading...\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                data.data.map((value, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{value.id}</TableCell>\r\n                    <TableCell>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"inherit\"\r\n                        onClick={handleClickName(value.id)}\r\n                        style={{\r\n                          textDecoration: \"underline\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {value.name}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Switch\r\n                        value={value.is_active}\r\n                        checked={value.is_active}\r\n                        onChange={handleChange(value.id, value.is_active)}\r\n                        name=\"checkedA\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button onClick={handleDelete}>Delete</Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}