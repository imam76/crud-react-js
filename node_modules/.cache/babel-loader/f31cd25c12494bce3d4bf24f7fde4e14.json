{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Typography, TextField, Switch } from \"@material-ui/core\";\n\nfunction UpdatePage(props) {\n  //manage props\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  let dispatch = useDispatch(); //reducer fetching data\n\n  const reducer = useSelector(state => state);\n  const res = reducer.detailReducer; //state init\n\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({\n    is_active: true\n  });\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeName,\n    name: \"username\" //   ref={(el) => (dialogRef = el)}\n    ,\n    fullWidth: true,\n    key: `${Math.floor(Math.random() * 1000)}-min` // value={res.pending ? \"loading...\" : res.data.name}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeComment,\n    name: \"comment\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    key: `${Math.floor(Math.random() * 1000)}-min` // value={res.pending ? \"loading...\" : res.data.comment}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_active\",\n    disabled: res.pending,\n    checked: !res.pending ? res.data.is_active === toggle.is_active ? true : false : false,\n    onChange: handleChangeSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default UpdatePage;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Grid","Typography","TextField","Switch","UpdatePage","props","history","match","params","id","dispatch","reducer","state","res","detailReducer","dialogRef","toggle","setToggle","is_active","fetchDetail","handleChangeName","Math","floor","random","handleChangeComment","pending","data","handleChangeSwitch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Typography, TextField, Switch } from \"@material-ui/core\";\n\nfunction UpdatePage(props) {\n  //manage props\n\n  const { history, match } = props;\n  let params = match.params.id;\n  //redux\n  let dispatch = useDispatch();\n\n  //reducer fetching data\n  const reducer = useSelector((state) => state);\n  const res = reducer.detailReducer;\n\n  //state init\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({ is_active: true });\n\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Name</Typography>\n        <TextField\n          onChange={handleChangeName}\n          name=\"username\"\n          //   ref={(el) => (dialogRef = el)}\n          fullWidth\n          key={`${Math.floor(Math.random() * 1000)}-min`}\n          // value={res.pending ? \"loading...\" : res.data.name}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Comment</Typography>\n        <TextField\n          onChange={handleChangeComment}\n          name=\"comment\"\n          fullWidth\n          multiline\n          rows={4}\n          key={`${Math.floor(Math.random() * 1000)}-min`}\n          // value={res.pending ? \"loading...\" : res.data.comment}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Is active</Typography>\n        <Switch\n          name=\"is_active\"\n          disabled={res.pending}\n          checked={\n            !res.pending\n              ? res.data.is_active === toggle.is_active\n                ? true\n                : false\n              : false\n          }\n          onChange={handleChangeSwitch}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default UpdatePage;\n"]},"metadata":{},"sourceType":"module"}