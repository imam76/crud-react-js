{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Typography, TextField, Switch } from \"@material-ui/core\";\nimport { fetchDetail } from \"../redux/fetchData\";\nimport { detailUpdateChange } from \"../redux/actions\";\n\nfunction UpdatePage(props) {\n  //manage props\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  let dispatch = useDispatch(); //reducer fetching data\n\n  const reducer = useSelector(state => state);\n  const res = reducer.detailReducer; //state init\n\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({\n    is_active: true\n  }); // lifecycle\n\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChangeName = event => {\n    // dialogRef.focus();\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"hallo update name\", event.target.value);\n    const data = {\n      [name]: value\n    };\n    dispatch(detailUpdateChange(data));\n  };\n\n  const handleChangeComment = event => {\n    console.log(\"hallo update comment\", event.target.value);\n  };\n\n  const handleChangeSwitch = event => {\n    console.log(\"is aktive =>\", event.target.checked); // setToggle({\n    //   ...toggle,\n    //   is_active: !toggle.is_active,\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeName,\n    disabled: res.pending,\n    name: \"username\" //   ref={(el) => (dialogRef = el)}\n    ,\n    fullWidth: true,\n    key: `${Math.floor(Math.random() * 1000)}-min`,\n    value: res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeComment,\n    name: \"comment\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    key: `${Math.floor(Math.random() * 1000)}-min` // value={res.pending ? \"loading...\" : res.data.comment}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_active\",\n    disabled: res.pending,\n    checked: !res.pending ? res.data.is_active === toggle.is_active ? true : false : false,\n    onChange: handleChangeSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default UpdatePage;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Grid","Typography","TextField","Switch","fetchDetail","detailUpdateChange","UpdatePage","props","history","match","params","id","dispatch","reducer","state","res","detailReducer","dialogRef","toggle","setToggle","is_active","handleCancel","goBack","handleChangeName","event","name","value","target","console","log","data","handleChangeComment","handleChangeSwitch","checked","pending","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Typography, TextField, Switch } from \"@material-ui/core\";\nimport { fetchDetail } from \"../redux/fetchData\";\nimport { detailUpdateChange } from \"../redux/actions\";\n\nfunction UpdatePage(props) {\n  //manage props\n\n  const { history, match } = props;\n  let params = match.params.id;\n  //redux\n  let dispatch = useDispatch();\n\n  //reducer fetching data\n  const reducer = useSelector((state) => state);\n  const res = reducer.detailReducer;\n\n  //state init\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({ is_active: true });\n\n  // lifecycle\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChangeName = (event) => {\n    // dialogRef.focus();\n    const { name, value} = event.target;\n    console.log(\"hallo update name\", event.target.value);\n    const data = {\n      [name]: value,\n    };\n    dispatch(detailUpdateChange(data));\n  };\n\n  const handleChangeComment = (event) => {\n    console.log(\"hallo update comment\", event.target.value);\n  };\n  const handleChangeSwitch = (event) => {\n    console.log(\"is aktive =>\", event.target.checked);\n    // setToggle({\n    //   ...toggle,\n    //   is_active: !toggle.is_active,\n    // });\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Name</Typography>\n        <TextField\n          onChange={handleChangeName}\n          disabled={res.pending}\n          name=\"username\"\n          //   ref={(el) => (dialogRef = el)}\n          fullWidth\n          key={`${Math.floor(Math.random() * 1000)}-min`}\n          value={res.data.name}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Comment</Typography>\n        <TextField\n          onChange={handleChangeComment}\n          name=\"comment\"\n          fullWidth\n          multiline\n          rows={4}\n          key={`${Math.floor(Math.random() * 1000)}-min`}\n          // value={res.pending ? \"loading...\" : res.data.comment}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography component=\"span\">Is active</Typography>\n        <Switch\n          name=\"is_active\"\n          disabled={res.pending}\n          checked={\n            !res.pending\n              ? res.data.is_active === toggle.is_active\n                ? true\n                : false\n              : false\n          }\n          onChange={handleChangeSwitch}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default UpdatePage;\n"]},"metadata":{},"sourceType":"module"}