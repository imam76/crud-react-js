{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Typography, DialogActions, Button, Grid, Switch, responsiveFontSizes, TextField, useFormControl } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDetailSwitch, detailUpdateChange } from \"../../redux/actions\";\nimport patchSwitch from \"../../redux/patchData\";\nimport { fetchDetail } from \"../../redux/fetchData\"; //form\n\nimport InputTextField from \"./Form/InputTextField\";\n\nfunction DialogEditUsers(props) {\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  let dispatch = useDispatch(); //reducer fetching data\n\n  const reducer = useSelector(state => state);\n  const res = reducer.detailReducer; //state init\n\n  let TextfieldRef = useRef(null);\n  const [toggle, setToggle] = useState({\n    is_active: true\n  });\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChangeName = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"hallo update name\", event.target);\n    const data = { ...res,\n      data: { ...res.data,\n        [name]: value\n      }\n    };\n    dispatch(detailUpdateChange(data));\n  };\n\n  const handleChangeComment = event => {\n    console.log(\"hallo update comment\", event.target, TextfieldRef.current.value);\n  };\n\n  const handleChangeSwitch = event => {\n    console.log(\"is aktive =>\", event.target.checked); // setToggle({\n    //   ...toggle,\n    //   is_active: !toggle.is_active,\n    // });\n  }; // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   let data = res.data;\n  //   data = {\n  //     ...res.data,\n  //     name: event.target[0].value,\n  //     comment: event.target[2].value,\n  //     is_active: event.target[4].checked,\n  //   };\n  //   console.log(\"value submitan\", res.data, data);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    \"aria-labelledby\": \"form-dialog-edit-users\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \" Edit Data\"))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeName,\n    name: \"name\",\n    pending: res.pending,\n    variant: \"outlined\",\n    fullWidth: true,\n    ref: e => TextfieldRef = e // keys={`${Math.floor(Math.random() * 1000)}-min`}\n    ,\n    value: res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeComment,\n    name: \"comment\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    pending: res.pending,\n    variant: \"outlined\" // keys={`${Math.floor(Math.random() * 1000)}-min`}\n    ,\n    value: res.data.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_active\",\n    disabled: res.pending,\n    checked: !res.pending ? res.data.is_active === toggle.is_active ? true : false : false,\n    onChange: handleChangeSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default DialogEditUsers;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js"],"names":["React","useState","useEffect","useRef","Dialog","DialogContent","DialogTitle","Typography","DialogActions","Button","Grid","Switch","responsiveFontSizes","TextField","useFormControl","useSelector","useDispatch","updateDetailSwitch","detailUpdateChange","patchSwitch","fetchDetail","InputTextField","DialogEditUsers","props","history","match","params","id","dispatch","reducer","state","res","detailReducer","TextfieldRef","toggle","setToggle","is_active","handleCancel","goBack","handleChangeName","event","name","value","target","console","log","data","handleChangeComment","current","handleChangeSwitch","checked","pending","e","comment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  DialogActions,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  responsiveFontSizes,\r\n  TextField,\r\n  useFormControl,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateDetailSwitch, detailUpdateChange } from \"../../redux/actions\";\r\nimport patchSwitch from \"../../redux/patchData\";\r\nimport { fetchDetail } from \"../../redux/fetchData\";\r\n\r\n//form\r\nimport InputTextField from \"./Form/InputTextField\";\r\n\r\nfunction DialogEditUsers(props) {\r\n  const { history, match } = props;\r\n  let params = match.params.id;\r\n\r\n  //redux\r\n  let dispatch = useDispatch();\r\n\r\n  //reducer fetching data\r\n  const reducer = useSelector((state) => state);\r\n  const res = reducer.detailReducer;\r\n\r\n  //state init\r\n  let TextfieldRef = useRef(null);\r\n  const [toggle, setToggle] = useState({ is_active: true });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetail(params));\r\n  }, []);\r\n\r\n  const handleCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChangeName = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(\"hallo update name\", event.target);\r\n    const data = {\r\n      ...res,\r\n      data: {\r\n        ...res.data,\r\n        [name]: value,\r\n      },\r\n    };\r\n    dispatch(detailUpdateChange(data));\r\n  };\r\n\r\n  const handleChangeComment = (event) => {\r\n    console.log(\"hallo update comment\", event.target, TextfieldRef.current.value);\r\n  };\r\n  const handleChangeSwitch = (event) => {\r\n    console.log(\"is aktive =>\", event.target.checked);\r\n    // setToggle({\r\n    //   ...toggle,\r\n    //   is_active: !toggle.is_active,\r\n    // });\r\n  };\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   let data = res.data;\r\n  //   data = {\r\n  //     ...res.data,\r\n  //     name: event.target[0].value,\r\n  //     comment: event.target[2].value,\r\n  //     is_active: event.target[4].checked,\r\n  //   };\r\n  //   console.log(\"value submitan\", res.data, data);\r\n  // };\r\n\r\n  return (\r\n    <Dialog open={true} aria-labelledby=\"form-dialog-edit-users\" fullWidth>\r\n      {/* <form onSubmit={handleSubmit}> */}\r\n      <DialogTitle>\r\n        <Typography component=\"span\" variant=\"h4\">\r\n          <b> Edit Data</b>\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"span\">Name</Typography>\r\n            <TextField\r\n              onChange={handleChangeName}\r\n              name=\"name\"\r\n              pending={res.pending}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              ref={(e) => (TextfieldRef = e)}\r\n              // keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n              value={res.data.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"span\">Comment</Typography>\r\n            <TextField\r\n              onChange={handleChangeComment}\r\n              name=\"comment\"\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              pending={res.pending}\r\n              variant=\"outlined\"\r\n              // keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n              value={res.data.comment}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"span\">Is active</Typography>\r\n            <Switch\r\n              name=\"is_active\"\r\n              disabled={res.pending}\r\n              checked={\r\n                !res.pending\r\n                  ? res.data.is_active === toggle.is_active\r\n                    ? true\r\n                    : false\r\n                  : false\r\n              }\r\n              onChange={handleChangeSwitch}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button color=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n      {/* </form> */}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default DialogEditUsers;\r\n"]},"metadata":{},"sourceType":"module"}