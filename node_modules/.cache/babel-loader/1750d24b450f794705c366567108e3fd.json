{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\"; //redux\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./redux/reducers\";\nimport App from \"./App\";\nimport \"./baseStyle.css\";\nimport \"./style.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducers, composeEnchancers(applyMiddleware(thunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/index.js"],"names":["React","ReactDOM","BrowserRouter","createStore","applyMiddleware","compose","Provider","thunk","rootReducers","App","serviceWorker","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,iBAAP;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,iBAAiB,GACrBC,MAAM,CAACC,oCAAP,IAA+CR,OADjD;AAGA,MAAMS,KAAK,GAAGX,WAAW,CACvBK,YADuB,EAEvBG,iBAAiB,CAACP,eAAe,CAACG,KAAD,CAAhB,CAFM,CAAzB;AAKAN,QAAQ,CAACc,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAP,aAAa,CAACQ,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n//redux\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./redux/reducers\";\n\nimport App from \"./App\";\nimport \"./baseStyle.css\";\nimport \"./style.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnchancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducers,\n  composeEnchancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}