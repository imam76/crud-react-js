{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Typography, DialogActions, Button, Grid, Switch, responsiveFontSizes, useFormControl } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDetailSwitch } from \"../../redux/actions\";\nimport patchSwitch from \"../../redux/patchData\";\nimport { fetchDetail } from \"../../redux/fetchData\"; //form\n\nimport InputTextField from \"./Form/InputTextField\";\n\nfunction DialogEditUsers(props) {\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; // let inputRef = useRef(undefined);\n  //redux\n\n  let dispatch = useDispatch(); //reducer fetching data\n\n  const state = useSelector(state => state);\n  const res = state.detailReducer; // const isActive = res.data.is_active;\n\n  const [toggle, setToggle] = useState({\n    is_active: false\n  });\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n    if (res.data.is_active !== undefined) setToggle({\n      is_active: res.data.is_active\n    });\n    console.log(\"use effect setToggle =>\", toggle);\n  }, [toggle]);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    setToggle({\n      is_active: event.target.checked\n    });\n    console.log(\"is aktive =>\", toggle);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let data = res.data;\n    data = { ...res.data,\n      name: event.target[0].value,\n      comment: event.target[2].value,\n      is_active: event.target[4].checked\n    };\n    console.log(\"value submitan\", res.data, data);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    \"aria-labelledby\": \"form-dialog-edit-users\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \" Edit Data\"))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(InputTextField, {\n    name: \"username\",\n    fullWidth: true,\n    keys: `${Math.floor(Math.random() * 1000)}-min`,\n    defaultValue: res.pending === true ? \"loading...\" : res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(InputTextField, {\n    name: \"comment\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    keys: `${Math.floor(Math.random() * 1000)}-min`,\n    defaultValue: res.pending === true ? \"loading...\" : res.data.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_active\",\n    value: toggle.is_active,\n    checked: toggle.is_active,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nexport default DialogEditUsers;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js"],"names":["React","useState","useEffect","useRef","Dialog","DialogContent","DialogTitle","Typography","DialogActions","Button","Grid","Switch","responsiveFontSizes","useFormControl","useSelector","useDispatch","updateDetailSwitch","patchSwitch","fetchDetail","InputTextField","DialogEditUsers","props","history","match","params","id","dispatch","state","res","detailReducer","toggle","setToggle","is_active","data","undefined","console","log","handleCancel","goBack","handleChange","event","target","checked","handleSubmit","preventDefault","name","value","comment","Math","floor","random","pending"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  DialogActions,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  responsiveFontSizes,\r\n  useFormControl,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateDetailSwitch } from \"../../redux/actions\";\r\nimport patchSwitch from \"../../redux/patchData\";\r\nimport { fetchDetail } from \"../../redux/fetchData\";\r\n\r\n//form\r\nimport InputTextField from \"./Form/InputTextField\";\r\n\r\nfunction DialogEditUsers(props) {\r\n  const { history, match } = props;\r\n  let params = match.params.id;\r\n  // let inputRef = useRef(undefined);\r\n\r\n  //redux\r\n  let dispatch = useDispatch();\r\n\r\n  //reducer fetching data\r\n  const state = useSelector((state) => state);\r\n  const res = state.detailReducer;\r\n  // const isActive = res.data.is_active;\r\n  const [toggle, setToggle] = useState({\r\n    is_active: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetail(params));\r\n    if (res.data.is_active !== undefined) setToggle({ is_active: res.data.is_active });\r\n    console.log(\"use effect setToggle =>\", toggle);\r\n  }, [toggle]);\r\n\r\n  const handleCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setToggle({\r\n      is_active: event.target.checked,\r\n    });\r\n    console.log(\"is aktive =>\", toggle);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let data = res.data;\r\n    data = {\r\n      ...res.data,\r\n      name: event.target[0].value,\r\n      comment: event.target[2].value,\r\n      is_active: event.target[4].checked,\r\n    };\r\n    console.log(\"value submitan\", res.data, data);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={true} aria-labelledby=\"form-dialog-edit-users\" fullWidth>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle>\r\n          <Typography component=\"span\" variant=\"h4\">\r\n            <b> Edit Data</b>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Name</Typography>\r\n              <InputTextField\r\n                name=\"username\"\r\n                fullWidth\r\n                keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n                defaultValue={\r\n                  res.pending === true ? \"loading...\" : res.data.name\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Comment</Typography>\r\n              <InputTextField\r\n                name=\"comment\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n                defaultValue={\r\n                  res.pending === true ? \"loading...\" : res.data.comment\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Is active</Typography>\r\n              <Switch\r\n                name=\"is_active\"\r\n                value={toggle.is_active}\r\n                checked={toggle.is_active}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default DialogEditUsers;\r\n"]},"metadata":{},"sourceType":"module"}