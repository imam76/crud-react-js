{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { FETCH_DATA_PENDING, FETCH_DATA_SUCCESS, FETCH_DATA_ERROR, PATCH_DATA_PENDING, PATCH_DATA_SUCCESS, PATCH_DATA_ERROR } from \"./actions\"; //initial state\n\nconst initialState = {\n  pending: false,\n  data: [],\n  error: null\n};\n\nfunction dataReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case FETCH_DATA_SUCCESS:\n      return { ...state,\n        pending: false,\n        data: action.data\n      };\n\n    case FETCH_DATA_ERROR:\n      return { ...state,\n        pending: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction patchData(state = initialState, action) {\n  switch (action.type) {\n    case PATCH_DATA_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case PATCH_DATA_SUCCESS:\n      return { ...state,\n        pending: false,\n        data: action.data\n      };\n\n    case PATCH_DATA_ERROR:\n      return { ...state,\n        pending: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n} // function whitelist(state = initialState, action) {\n//   switch (action.type) {\n//     case FETCH_DATA_SUCCESS:\n//       // return {\n//       //   ...state,\n//       //   res: action.res,\n//       // };\n//       console.log(action);\n//       break;\n//     case \"REMOVE_WHITE_LIST\":\n//       return state.filter((item) => item.id !== action.id);\n//     default:\n//       // the dispatched action is not in this reducer, return the state unchanged\n//       return state;\n//   }\n// }\n\n\nconst rootReducers = combineReducers({\n  patchData: patchData,\n  dataReducer: dataReducer\n});\nexport default rootReducers;","map":{"version":3,"sources":["C:/Users/nawa/Documents/Development/kledo-assesment/src/redux/reducers.js"],"names":["combineReducers","FETCH_DATA_PENDING","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","PATCH_DATA_PENDING","PATCH_DATA_SUCCESS","PATCH_DATA_ERROR","initialState","pending","data","error","dataReducer","state","action","type","patchData","rootReducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,WAPP,C,CASA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,kBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAHR,OAAP;;AAKF,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,OAAP;;AAKF;AACE,aAAOE,KAAP;AAnBJ;AAqBD;;AAED,SAASG,SAAT,CAAmBH,KAAK,GAAGL,YAA3B,EAAyCM,MAAzC,EAAgD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAHR,OAAP;;AAKF,SAAKH,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,OAAP;;AAKF;AACE,aAAOE,KAAP;AAnBJ;AAqBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,YAAY,GAAGhB,eAAe,CAAC;AACnCe,EAAAA,SAAS,EAAEA,SADwB;AAEnCJ,EAAAA,WAAW,EAAEA;AAFsB,CAAD,CAApC;AAKA,eAAeK,YAAf","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport {\r\n  FETCH_DATA_PENDING,\r\n  FETCH_DATA_SUCCESS,\r\n  FETCH_DATA_ERROR,\r\n  PATCH_DATA_PENDING,\r\n  PATCH_DATA_SUCCESS,\r\n  PATCH_DATA_ERROR,\r\n} from \"./actions\";\r\n\r\n//initial state\r\nconst initialState = {\r\n  pending: false,\r\n  data: [],\r\n  error: null,\r\n};\r\n\r\nfunction dataReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_DATA_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.data,\r\n      };\r\n    case FETCH_DATA_ERROR:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction patchData(state = initialState, action){\r\n  switch (action.type) {\r\n    case PATCH_DATA_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case PATCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: action.data,\r\n      };\r\n    case PATCH_DATA_ERROR:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function whitelist(state = initialState, action) {\r\n//   switch (action.type) {\r\n//     case FETCH_DATA_SUCCESS:\r\n//       // return {\r\n//       //   ...state,\r\n//       //   res: action.res,\r\n//       // };\r\n//       console.log(action);\r\n//       break;\r\n\r\n//     case \"REMOVE_WHITE_LIST\":\r\n//       return state.filter((item) => item.id !== action.id);\r\n\r\n//     default:\r\n//       // the dispatched action is not in this reducer, return the state unchanged\r\n//       return state;\r\n//   }\r\n// }\r\nconst rootReducers = combineReducers({\r\n  patchData: patchData,\r\n  dataReducer: dataReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n"]},"metadata":{},"sourceType":"module"}