{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Typography, DialogActions, Button, Grid, Switch, responsiveFontSizes, TextField, useFormControl } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDetailSwitch, detailUpdateChange } from \"../../redux/actions\"; // import patchSwitch from \"../../redux/patchData\";\n\nimport { fetchDetail } from \"../../redux/fetchData\";\n\nfunction DialogEditUsers(props) {\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  let dispatch = useDispatch(); //lifecycle\n\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []); //reducer fetching data\n\n  const reducer = useSelector(state => state);\n  const res = reducer.detailReducer; //state init\n  // const [toggle, setToggle] = useState({ is_active: true });\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"hallo update name\", event.target);\n    const payload = {\n      [name]: value,\n      key: name\n    };\n    dispatch(detailUpdateChange(payload));\n  };\n\n  const handleChangeSwitch = statusPast => event => {// setToggle({\n    //   ...toggle,\n    //   is_active: event.target.checked,\n    // });\n    // console.log(\"is aktive =>\", event.target.checked, statusPast);\n    // dispatch(updateDetailSwitch(event.target.checked));\n  };\n\n  console.log(typeof res.pending);\n  return (\n    /*#__PURE__*/\n    // <Dialog open={true} aria-labelledby=\"form-dialog-edit-users\" fullWidth>\n    //   <DialogTitle>\n    //     <Typography component=\"span\" variant=\"h4\">\n    //       <b> Edit Data</b>\n    //     </Typography>\n    //   </DialogTitle>\n    //   <DialogContent>\n    React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      name: \"name\",\n      disabled: res.pending // variant=\"outlined\"\n      ,\n      fullWidth: true,\n      value: res.data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(TextField, {\n      onChange: handleChange,\n      name: \"comment\",\n      fullWidth: true,\n      multiline: true,\n      rows: 4,\n      disabled: res.pending // variant=\"outlined\"\n      ,\n      value: res.data.comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n      name: \"is_active\",\n      disabled: res.pending // checked={\n      //   !res.pending\n      //     ? res.data.is_active === toggle.is_active\n      //       ? true\n      //       : false\n      //     : false\n      // }\n      // onChange={handleChangeSwitch(res.data.is_active)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })))) //   </DialogContent>\n    //   <DialogActions>\n    //     <Button color=\"primary\" onClick={handleCancel}>\n    //       Cancel\n    //     </Button>\n    //     <Button color=\"primary\" type=\"submit\">\n    //       Submit\n    //     </Button>\n    //   </DialogActions>\n    // </Dialog>\n\n  );\n}\n\nexport default DialogEditUsers;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js"],"names":["React","useState","useEffect","Dialog","DialogContent","DialogTitle","Typography","DialogActions","Button","Grid","Switch","responsiveFontSizes","TextField","useFormControl","useSelector","useDispatch","updateDetailSwitch","detailUpdateChange","fetchDetail","DialogEditUsers","props","history","match","params","id","dispatch","reducer","state","res","detailReducer","handleCancel","goBack","handleChange","event","name","value","target","console","log","payload","key","handleChangeSwitch","statusPast","pending","data","comment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  DialogActions,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  responsiveFontSizes,\r\n  TextField,\r\n  useFormControl,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateDetailSwitch, detailUpdateChange } from \"../../redux/actions\";\r\n// import patchSwitch from \"../../redux/patchData\";\r\nimport { fetchDetail } from \"../../redux/fetchData\";\r\n\r\nfunction DialogEditUsers(props) {\r\n  const { history, match } = props;\r\n  let params = match.params.id;\r\n\r\n  //redux\r\n  let dispatch = useDispatch();\r\n\r\n  //lifecycle\r\n  useEffect(() => {\r\n    dispatch(fetchDetail(params));\r\n  }, []);\r\n\r\n  //reducer fetching data\r\n  const reducer = useSelector((state) => state);\r\n  const res = reducer.detailReducer;\r\n\r\n  //state init\r\n  // const [toggle, setToggle] = useState({ is_active: true });\r\n\r\n  const handleCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(\"hallo update name\", event.target);\r\n    const payload = {\r\n      [name]: value,\r\n      key: name,\r\n    };\r\n    dispatch(detailUpdateChange(payload));\r\n  };\r\n\r\n  const handleChangeSwitch = (statusPast) => (event) => {\r\n    // setToggle({\r\n    //   ...toggle,\r\n    //   is_active: event.target.checked,\r\n    // });\r\n    // console.log(\"is aktive =>\", event.target.checked, statusPast);\r\n    // dispatch(updateDetailSwitch(event.target.checked));\r\n  };\r\n\r\n  console.log(typeof res.pending);\r\n\r\n  return (\r\n    // <Dialog open={true} aria-labelledby=\"form-dialog-edit-users\" fullWidth>\r\n    //   <DialogTitle>\r\n    //     <Typography component=\"span\" variant=\"h4\">\r\n    //       <b> Edit Data</b>\r\n    //     </Typography>\r\n    //   </DialogTitle>\r\n    //   <DialogContent>\r\n    <form noValidate autoComplete=\"off\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"span\">Name</Typography>\r\n          <TextField\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            disabled={res.pending}\r\n            // variant=\"outlined\"\r\n            fullWidth\r\n            value={res.data.name}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"span\">Comment</Typography>\r\n          <TextField\r\n            onChange={handleChange}\r\n            name=\"comment\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            disabled={res.pending}\r\n            // variant=\"outlined\"\r\n            value={res.data.comment}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"span\">Is active</Typography>\r\n          <Switch\r\n            name=\"is_active\"\r\n            disabled={res.pending}\r\n            // checked={\r\n            //   !res.pending\r\n            //     ? res.data.is_active === toggle.is_active\r\n            //       ? true\r\n            //       : false\r\n            //     : false\r\n            // }\r\n            // onChange={handleChangeSwitch(res.data.is_active)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n    //   </DialogContent>\r\n    //   <DialogActions>\r\n    //     <Button color=\"primary\" onClick={handleCancel}>\r\n    //       Cancel\r\n    //     </Button>\r\n    //     <Button color=\"primary\" type=\"submit\">\r\n    //       Submit\r\n    //     </Button>\r\n    //   </DialogActions>\r\n    // </Dialog>\r\n  );\r\n}\r\n\r\nexport default DialogEditUsers;\r\n"]},"metadata":{},"sourceType":"module"}