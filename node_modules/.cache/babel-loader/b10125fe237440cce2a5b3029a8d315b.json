{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nawa\\\\Documents\\\\Development\\\\kledo-assesment\\\\src\\\\Page\\\\Component\\\\DialogEditUsers.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, Typography, DialogActions, Button, Grid, Switch, responsiveFontSizes, useFormControl } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchDetailUpdateChange } from \"../../redux/actions\";\nimport patchSwitch from \"../../redux/patchData\";\nimport { fetchDetail } from \"../../redux/fetchData\"; //form\n\nimport InputTextField from \"./Form/InputTextField\";\n\nfunction DialogEditUsers(props) {\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []); //reducer fetching data\n\n  const state = useSelector(state => state);\n  const res = state.detailReducer;\n  const [toggle, settoggle] = useState({\n    is_active: false\n  });\n  console.log(res, state);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = (id, status) => props => {\n    // dispatch(patchSwitch(id, status));\n    settoggle({\n      is_active: !toggle.is_active\n    });\n  };\n\n  const handleSubmit = event => {\n    event.prefentDevault();\n    console.log(\"value submitan\", event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    \"aria-labelledby\": \"form-dialog-edit-users\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \" Edit Data\"))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(InputTextField, {\n    fullWidth: true,\n    keys: `${Math.floor(Math.random() * 1000)}-min`,\n    defaultValue: res.pending === true ? \"loading...\" : res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(InputTextField, {\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    keys: `${Math.floor(Math.random() * 1000)}-min`,\n    defaultValue: res.pending === true ? \"loading...\" : res.data.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"detailCheckedA\",\n    value: toggle.is_active,\n    checked: toggle.is_active,\n    onChange: handleChange(params, res.data.is_active),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    name: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nexport default DialogEditUsers;","map":{"version":3,"sources":["C:/Users/nawa/Documents/Development/kledo-assesment/src/Page/Component/DialogEditUsers.js"],"names":["React","useState","useEffect","Dialog","DialogContent","DialogTitle","Typography","DialogActions","Button","Grid","Switch","responsiveFontSizes","useFormControl","useSelector","useDispatch","fetchDetailUpdateChange","patchSwitch","fetchDetail","InputTextField","DialogEditUsers","props","history","match","params","id","dispatch","state","res","detailReducer","toggle","settoggle","is_active","console","log","handleCancel","goBack","handleChange","status","handleSubmit","event","prefentDevault","Math","floor","random","pending","data","name","comment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  DialogActions,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  responsiveFontSizes,\r\n  useFormControl,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchDetailUpdateChange } from \"../../redux/actions\";\r\nimport patchSwitch from \"../../redux/patchData\";\r\nimport { fetchDetail } from \"../../redux/fetchData\";\r\n\r\n//form\r\nimport InputTextField from \"./Form/InputTextField\";\r\n\r\nfunction DialogEditUsers(props) {\r\n  const { history, match } = props;\r\n  let params = match.params.id;\r\n\r\n  //redux\r\n  let dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchDetail(params));\r\n  }, []);\r\n\r\n  //reducer fetching data\r\n  const state = useSelector((state) => state);\r\n  const res = state.detailReducer;\r\n  const [toggle, settoggle] = useState({ is_active: false });\r\n  console.log(res, state);\r\n\r\n  const handleCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = (id, status) => (props) => {\r\n    // dispatch(patchSwitch(id, status));\r\n    settoggle({\r\n      is_active: !toggle.is_active,\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.prefentDevault();\r\n    console.log(\"value submitan\", event);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n      <Dialog open={true} aria-labelledby=\"form-dialog-edit-users\" fullWidth>\r\n        <DialogTitle>\r\n          <Typography component=\"span\" variant=\"h4\">\r\n            <b> Edit Data</b>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Name</Typography>\r\n              <InputTextField\r\n                fullWidth\r\n                keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n                defaultValue={\r\n                  res.pending === true ? \"loading...\" : res.data.name\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Comment</Typography>\r\n              <InputTextField\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                keys={`${Math.floor(Math.random() * 1000)}-min`}\r\n                defaultValue={\r\n                  res.pending === true ? \"loading...\" : res.data.comment\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography component=\"span\">Is active</Typography>\r\n              <Switch\r\n                name=\"detailCheckedA\"\r\n                value={toggle.is_active}\r\n                checked={toggle.is_active}\r\n                onChange={handleChange(params, res.data.is_active)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" name=\"submit\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DialogEditUsers;\r\n"]},"metadata":{},"sourceType":"module"}