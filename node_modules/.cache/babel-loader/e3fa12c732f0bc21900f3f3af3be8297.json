{"ast":null,"code":"var _jsxFileName = \"/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Typography, TextField, Switch, OutlinedInput } from \"@material-ui/core\";\nimport { fetchDetail } from \"../redux/fetchData\";\nimport { detailUpdateChange } from \"../redux/actions\";\n\nfunction UpdatePage(props) {\n  //manage props\n  const {\n    history,\n    match\n  } = props;\n  let params = match.params.id; //redux\n\n  const dispatch = useDispatch(); // lifecycle\n\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []); //reducer fetching data\n\n  const reducer = useSelector(state => state);\n  const res = reducer.detailReducer; //state init\n\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({\n    is_active: true\n  });\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"hallo update name\", event.target);\n    const payload = {\n      [name]: value,\n      key: name\n    };\n    dispatch(detailUpdateChange(payload));\n  };\n\n  const handleChangeSwitch = event => {\n    console.log(\"is aktive =>\", event.target.checked); // setToggle({\n    //   ...toggle,\n    //   is_active: !toggle.is_active,\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChange,\n    placeholder: \"ini testing\",\n    name: \"string\",\n    value: res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChange,\n    disabled: res.pending,\n    name: \"name\" //   ref={(el) => (dialogRef = el)}\n    ,\n    fullWidth: true // key={`${Math.floor(Math.random() * 1000)}-min`}\n    ,\n    value: res.data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChange,\n    name: \"comment\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4 // key={`${Math.floor(Math.random() * 1000)}-min`}\n    // value={res.pending ? \"loading...\" : res.data.comment}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Is active\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_active\",\n    disabled: res.pending,\n    checked: !res.pending ? res.data.is_active === toggle.is_active ? true : false : false,\n    onChange: handleChangeSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default UpdatePage;","map":{"version":3,"sources":["/home/babyface/Documents/Development/kledo-assesment/src/Page/UpdatePage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Grid","Typography","TextField","Switch","OutlinedInput","fetchDetail","detailUpdateChange","UpdatePage","props","history","match","params","id","dispatch","reducer","state","res","detailReducer","dialogRef","toggle","setToggle","is_active","handleCancel","goBack","handleChange","event","name","value","target","console","log","payload","key","handleChangeSwitch","checked","data","pending"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Grid,\n  Typography,\n  TextField,\n  Switch,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport { fetchDetail } from \"../redux/fetchData\";\nimport { detailUpdateChange } from \"../redux/actions\";\n\nfunction UpdatePage(props) {\n  //manage props\n\n  const { history, match } = props;\n  let params = match.params.id;\n  //redux\n  const dispatch = useDispatch();\n\n  // lifecycle\n  useEffect(() => {\n    dispatch(fetchDetail(params));\n  }, []);\n\n  //reducer fetching data\n  const reducer = useSelector((state) => state);\n  const res = reducer.detailReducer;\n\n  //state init\n  let dialogRef = useState(null);\n  const [toggle, setToggle] = useState({ is_active: true });\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(\"hallo update name\", event.target);\n    const payload = {\n      [name]: value,\n      key: name,\n    };\n    dispatch(detailUpdateChange(payload));\n  };\n  const handleChangeSwitch = (event) => {\n    console.log(\"is aktive =>\", event.target.checked);\n    // setToggle({\n    //   ...toggle,\n    //   is_active: !toggle.is_active,\n    // });\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <form noValidate autoComplete=\"off\">\n        <Grid item xs={12}>\n          <Typography component=\"span\">Name</Typography>\n          <TextField\n            onChange={handleChange}\n            placeholder=\"ini testing\"\n            name=\"string\"\n            value={res.data.name}\n          />\n          <TextField\n            onChange={handleChange}\n            disabled={res.pending}\n            name=\"name\"\n            //   ref={(el) => (dialogRef = el)}\n            fullWidth\n            // key={`${Math.floor(Math.random() * 1000)}-min`}\n            value={res.data.name}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography component=\"span\">Comment</Typography>\n          <TextField\n            onChange={handleChange}\n            name=\"comment\"\n            fullWidth\n            multiline\n            rows={4}\n            // key={`${Math.floor(Math.random() * 1000)}-min`}\n            // value={res.pending ? \"loading...\" : res.data.comment}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography component=\"span\">Is active</Typography>\n          <Switch\n            name=\"is_active\"\n            disabled={res.pending}\n            checked={\n              !res.pending\n                ? res.data.is_active === toggle.is_active\n                  ? true\n                  : false\n                : false\n            }\n            onChange={handleChangeSwitch}\n          />\n        </Grid>\n      </form>\n    </Grid>\n  );\n}\n\nexport default UpdatePage;\n"]},"metadata":{},"sourceType":"module"}