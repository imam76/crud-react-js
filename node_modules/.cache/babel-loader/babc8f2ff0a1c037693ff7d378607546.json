{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { FETCH_DATA_PENDING, FETCH_DATA_SUCCESS, FETCH_DATA_ERROR } from \"./actions\"; //initial state\n\nconst initialState = {\n  pending: false,\n  data: [{\n    id: \"12123322\",\n    nama: \"asep imam nawawi\"\n  }, {\n    id: \"12123322\",\n    nama: \"asep imam nawawi\"\n  }, {\n    id: \"12123322\",\n    nama: \"asep imam nawawi\"\n  }],\n  error: null\n};\n\nfunction dataReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_PENDING:\n      // return {\n      //   ...state,\n      //   pending: true,\n      // };\n      console.log(\"status pending true\");\n      break;\n\n    case FETCH_DATA_SUCCESS:\n      // return {\n      //   ...state,\n      //   pending: false,\n      //   data: action.payload,\n      // };\n      console.log(\"status data success\");\n      break;\n\n    case FETCH_DATA_ERROR:\n      // return {\n      //   ...state,\n      //   pending: false,\n      //   error: action.error,\n      // };\n      console.log(\"status data error\");\n      break;\n\n    default:\n      return state;\n  }\n}\n\nfunction whitelist(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_WHITE_LIST\":\n      return { ...state,\n        data: action.payload\n      };\n\n    case \"REMOVE_WHITE_LIST\":\n      return state.filter(item => item.id !== action.id);\n\n    default:\n      // the dispatched action is not in this reducer, return the state unchanged\n      return state;\n  }\n}\n\nconst rootReducers = combineReducers({\n  whitelist: whitelist,\n  data: dataReducer\n});\nexport default rootReducers;","map":{"version":3,"sources":["C:/Users/nawa/Documents/Development/kledo-assesment/src/redux/reducers.js"],"names":["combineReducers","FETCH_DATA_PENDING","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","initialState","pending","data","id","nama","error","dataReducer","state","action","type","console","log","whitelist","payload","filter","item","rootReducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,WAJP,C,CAMA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,CACJ;AAAEC,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GADI,EAEJ;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAFI,EAGJ;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAHI,CAFa;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB;;AAUA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,kBAAL;AACE;AACA;AACA;AACA;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AAEF,SAAKb,kBAAL;AACE;AACA;AACA;AACA;AACA;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AAEF,SAAKZ,gBAAL;AACE;AACA;AACA;AACA;AACA;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;;AAEF;AACE,aAAOJ,KAAP;AA5BJ;AA8BD;;AAED,SAASK,SAAT,CAAmBL,KAAK,GAAGP,YAA3B,EAAyCQ,MAAzC,EAAiD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACK;AAFR,OAAP;;AAKF,SAAK,mBAAL;AACE,aAAON,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYK,MAAM,CAACL,EAA1C,CAAP;;AAEF;AACE;AACA,aAAOI,KAAP;AAZJ;AAcD;;AACD,MAAMS,YAAY,GAAGpB,eAAe,CAAC;AACnCgB,EAAAA,SAAS,EAAEA,SADwB;AAEnCV,EAAAA,IAAI,EAAEI;AAF6B,CAAD,CAApC;AAKA,eAAeU,YAAf","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport {\r\n  FETCH_DATA_PENDING,\r\n  FETCH_DATA_SUCCESS,\r\n  FETCH_DATA_ERROR,\r\n} from \"./actions\";\r\n\r\n//initial state\r\nconst initialState = {\r\n  pending: false,\r\n  data: [\r\n    { id: \"12123322\", nama: \"asep imam nawawi\" },\r\n    { id: \"12123322\", nama: \"asep imam nawawi\" },\r\n    { id: \"12123322\", nama: \"asep imam nawawi\" },\r\n  ],\r\n  error: null,\r\n};\r\n\r\nfunction dataReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_DATA_PENDING:\r\n      // return {\r\n      //   ...state,\r\n      //   pending: true,\r\n      // };\r\n      console.log(\"status pending true\");\r\n      break;\r\n\r\n    case FETCH_DATA_SUCCESS:\r\n      // return {\r\n      //   ...state,\r\n      //   pending: false,\r\n      //   data: action.payload,\r\n      // };\r\n      console.log(\"status data success\");\r\n      break;\r\n\r\n    case FETCH_DATA_ERROR:\r\n      // return {\r\n      //   ...state,\r\n      //   pending: false,\r\n      //   error: action.error,\r\n      // };\r\n      console.log(\"status data error\");\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction whitelist(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_WHITE_LIST\":\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    case \"REMOVE_WHITE_LIST\":\r\n      return state.filter((item) => item.id !== action.id);\r\n\r\n    default:\r\n      // the dispatched action is not in this reducer, return the state unchanged\r\n      return state;\r\n  }\r\n}\r\nconst rootReducers = combineReducers({\r\n  whitelist: whitelist,\r\n  data: dataReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n"]},"metadata":{},"sourceType":"module"}